[package]
name = "blockifier"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "The transaction-executing component in the StarkNet sequencer."


[features]
default = ["std"]
std = [
    "cairo-felt/std",
    "cairo-vm/std",
    "starknet_api/std",
    "thiserror-no-std/std",
    "num-bigint/std",
]
testing = []
parity-scale-codec = [
    "dep:parity-scale-codec",
    "dep:scale-info",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ark-ff.workspace = true
ark-secp256k1.workspace = true
cached.workspace = true
cairo-felt = { workspace = true, features = ["alloc"] }
cairo-vm = { workspace = true, features = ["cairo-1-hints", "parity-scale-codec"] }
cairo-lang-casm = { workspace = true }
cairo-lang-casm-contract-class = { workspace = true }
cairo-lang-utils = { workspace = true }
cairo-lang-vm-utils = { workspace = true, features = ["execute_core_hints"] }
derive_more = { workspace = true, features = ["into_iterator", "from"] }
indexmap = { workspace = true, features = ["serde"] }
itertools = { workspace = true }
keccak.workspace = true
log.workspace = true
num-bigint = { workspace = true }
num-integer = { workspace = true }
num-traits = { workspace = true }
parity-scale-codec = { workspace = true, optional = true, features = [
    "derive", "max-encoded-len",
] }
scale-info = { workspace = true, optional = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
sha3 = { workspace = true }
starknet_api = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
phf = { workspace = true }
hashbrown = { workspace = true }
lazy_static = { workspace = true }
thiserror-no-std = { workspace = true }
starknet-crypto = { workspace = true }
spin = { workspace = true }
libm = { workspace = true }

[dev-dependencies]
starknet_api = { workspace = true, features = ["testing"] }
assert_matches.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
test-case.workspace = true
